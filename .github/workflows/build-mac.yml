name: Build and Release macOS

on:
  workflow_dispatch:
  workflow_call:
  push:
    tags:
      - zkool-v*

permissions:
  contents: write

env:
  RELEASE_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || github.head_ref || github.ref_name }}

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: chrisdickinson/setup-yq@latest
        with:
          yq-version: v4.45.4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Get version number
        id: version
        run: |
          RELEASE_VERSION=$(yq '.version' pubspec.yaml)
          echo "result=$RELEASE_VERSION" >> $GITHUB_OUTPUT
      - name: Decrypt certs
        run: |
          openssl enc -pbkdf2 -aes-256-cbc -salt -d -in misc/macos.cert.enc -out /tmp/cert.p12 -pass pass:$JKS_PASSWORD
        env:
          JKS_PASSWORD: ${{ secrets.JKS_PASSWORD }}
      - name: Install Codesign certs
        run: ./misc/install-certs.sh $KEYCHAIN_PWD /tmp/cert.p12 $APPLE_CERTIFICATE_PASSWORD
        env:
          KEYCHAIN_PWD: azB27DoYCFe5kzd3
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      - name: Build
        run: flutter build macos
      - name: Codesign
        run: ./misc/codesign-notarize.sh
        env:
          APPNAME: zkool
          APPLE_CERTIFICATE_NAME: ${{ secrets.MACOS_CERTIFICATE_NAME }}
          APPLE_ID: ${{ secrets.MACOS_NOTARIZATION_APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.MACOS_NOTARIZATION_PWD }}
          APPLE_TEAM_ID: ${{ secrets.MACOS_NOTARIZATION_TEAM_ID }}
      - name: Package
        run: |
          python3 -m pip install packaging
          npm install -g appdmg
          (cd misc; appdmg app.json ../${RELEASE_VERSION}.dmg)
        env:
          RELEASE_VERSION: zkool-${{ steps.version.outputs.result }}
      - name: Upload dmg artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./*.dmg
      - name: Create Release
        if: startsWith(github.ref_name, 'zkool-v')
        uses: softprops/action-gh-release@v2
        with:
          files: ./*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
