name: Build and Release Linux Debian Package

on:
  workflow_dispatch:
  workflow_call:
  push:
    tags:
      - zkool-v*

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Check out code
        uses: actions/checkout@v4
      - name: Get version number
        id: version
        uses: mikefarah/yq@master
        with:
          cmd: yq '.version' pubspec.yaml
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev libudev-dev
          dart pub global activate fastforge
          sudo apt install locate
          wget -O appimagetool "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          sudo mv appimagetool /usr/local/bin/
      - name: Build
        run: |
          fastforge package --platform=linux --targets=deb,appimage
      - name: Get deb package
        id: package
        run: |
          PKG_PATH=$(find dist/ -type f -name '*.deb' | head -n 1)
          DIR_NAME=$(dirname "$PKG_PATH")
          BASE_NAME=$(basename "$PKG_PATH" .deb)
          echo "Found package: $PKG_PATH"
          echo "PKG_PATH=$DIR_NAME/$BASE_NAME" >> $GITHUB_OUTPUT
      - name: Make ISO
        id: iso
        run: |
          cp -r build/linux/x64/release/bundle misc/
          cd misc
          docker build -t iso_builder -f iso.dockerfile .
          docker run --rm --privileged -v ".":/iso/out iso_builder bash -c "mkarchiso -w w -o out p"
          mv ZKOOL--x86_64.iso $ISO_NAME
          echo "ISO_PATH=misc/$ISO_NAME" >> $GITHUB_OUTPUT
        env:
          ISO_NAME: zkool-${{ steps.version.outputs.result }}.iso
      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          path: |
            ${{ steps.package.outputs.PKG_PATH }}.AppImage
            ${{ steps.iso.outputs.ISO_PATH }}
      - name: Create Release
        if: startsWith(github.ref_name, 'zkool-v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.package.outputs.PKG_PATH }}.deb
            ${{ steps.package.outputs.PKG_PATH }}.AppImage
            ${{ steps.iso.outputs.ISO_PATH }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
