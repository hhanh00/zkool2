// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'account.dart';
import 'api/account.dart';
import 'api/db.dart';
import 'api/frost.dart';
import 'api/init.dart';
import 'api/key.dart';
import 'api/mempool.dart';
import 'api/network.dart';
import 'api/pay.dart';
import 'api/sync.dart';
import 'api/transaction.dart';
import 'coin.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'io.dart';
import 'lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';
import 'pay.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_MempoolPtr => wire
      ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempoolPtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  Mempool
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
          dynamic raw);

  @protected
  Mempool
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
          dynamic raw);

  @protected
  Mempool
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
          dynamic raw);

  @protected
  RustStreamSink<DKGStatus> dco_decode_StreamSink_dkg_status_Sse(dynamic raw);

  @protected
  RustStreamSink<LogMessage> dco_decode_StreamSink_log_message_Sse(dynamic raw);

  @protected
  RustStreamSink<MempoolMsg> dco_decode_StreamSink_mempool_msg_Sse(dynamic raw);

  @protected
  RustStreamSink<SigningStatus> dco_decode_StreamSink_signing_status_Sse(
      dynamic raw);

  @protected
  RustStreamSink<SyncProgress> dco_decode_StreamSink_sync_progress_Sse(
      dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  Account dco_decode_account(dynamic raw);

  @protected
  AccountUpdate dco_decode_account_update(dynamic raw);

  @protected
  Addresses dco_decode_addresses(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  AccountUpdate dco_decode_box_autoadd_account_update(dynamic raw);

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw);

  @protected
  Category dco_decode_box_autoadd_category(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_64(dynamic raw);

  @protected
  FrostParams dco_decode_box_autoadd_frost_params(dynamic raw);

  @protected
  NewAccount dco_decode_box_autoadd_new_account(dynamic raw);

  @protected
  PaymentOptions dco_decode_box_autoadd_payment_options(dynamic raw);

  @protected
  PcztPackage dco_decode_box_autoadd_pczt_package(dynamic raw);

  @protected
  Seed dco_decode_box_autoadd_seed(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  BigInt dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_8(dynamic raw);

  @protected
  Category dco_decode_category(dynamic raw);

  @protected
  DKGStatus dco_decode_dkg_status(dynamic raw);

  @protected
  DustChangePolicy dco_decode_dust_change_policy(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  Folder dco_decode_folder(dynamic raw);

  @protected
  FrostParams dco_decode_frost_params(dynamic raw);

  @protected
  FrostSignParams dco_decode_frost_sign_params(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<Account> dco_decode_list_account(dynamic raw);

  @protected
  List<Category> dco_decode_list_category(dynamic raw);

  @protected
  List<Folder> dco_decode_list_folder(dynamic raw);

  @protected
  List<Memo> dco_decode_list_memo(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_32_loose(dynamic raw);

  @protected
  Uint32List dco_decode_list_prim_u_32_strict(dynamic raw);

  @protected
  Uint64List dco_decode_list_prim_u_64_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  Uint64List dco_decode_list_prim_usize_strict(dynamic raw);

  @protected
  List<Recipient> dco_decode_list_recipient(dynamic raw);

  @protected
  List<(String, double, bool)> dco_decode_list_record_string_f_64_bool(
      dynamic raw);

  @protected
  List<(int, double)> dco_decode_list_record_u_32_f_64(dynamic raw);

  @protected
  List<(int, String, PlatformInt64)> dco_decode_list_record_u_32_string_i_64(
      dynamic raw);

  @protected
  List<TAddressTxCount> dco_decode_list_t_address_tx_count(dynamic raw);

  @protected
  List<Tx> dco_decode_list_tx(dynamic raw);

  @protected
  List<TxMemo> dco_decode_list_tx_memo(dynamic raw);

  @protected
  List<TxNote> dco_decode_list_tx_note(dynamic raw);

  @protected
  List<TxOutput> dco_decode_list_tx_output(dynamic raw);

  @protected
  List<TxPlanIn> dco_decode_list_tx_plan_in(dynamic raw);

  @protected
  List<TxPlanOut> dco_decode_list_tx_plan_out(dynamic raw);

  @protected
  List<TxSpend> dco_decode_list_tx_spend(dynamic raw);

  @protected
  LogMessage dco_decode_log_message(dynamic raw);

  @protected
  Memo dco_decode_memo(dynamic raw);

  @protected
  MempoolMsg dco_decode_mempool_msg(dynamic raw);

  @protected
  NewAccount dco_decode_new_account(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_64(dynamic raw);

  @protected
  FrostParams? dco_decode_opt_box_autoadd_frost_params(dynamic raw);

  @protected
  Seed? dco_decode_opt_box_autoadd_seed(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  BigInt? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_8(dynamic raw);

  @protected
  Uint8List? dco_decode_opt_list_prim_u_8_strict(dynamic raw);

  @protected
  List<Recipient>? dco_decode_opt_list_recipient(dynamic raw);

  @protected
  PaymentOptions dco_decode_payment_options(dynamic raw);

  @protected
  PcztPackage dco_decode_pczt_package(dynamic raw);

  @protected
  PoolBalance dco_decode_pool_balance(dynamic raw);

  @protected
  Receivers dco_decode_receivers(dynamic raw);

  @protected
  Recipient dco_decode_recipient(dynamic raw);

  @protected
  (String, double, bool) dco_decode_record_string_f_64_bool(dynamic raw);

  @protected
  (int, double) dco_decode_record_u_32_f_64(dynamic raw);

  @protected
  (int, String, PlatformInt64) dco_decode_record_u_32_string_i_64(dynamic raw);

  @protected
  Seed dco_decode_seed(dynamic raw);

  @protected
  ServerType dco_decode_server_type(dynamic raw);

  @protected
  SigningStatus dco_decode_signing_status(dynamic raw);

  @protected
  SyncHeight dco_decode_sync_height(dynamic raw);

  @protected
  SyncProgress dco_decode_sync_progress(dynamic raw);

  @protected
  TAddressTxCount dco_decode_t_address_tx_count(dynamic raw);

  @protected
  Tx dco_decode_tx(dynamic raw);

  @protected
  TxAccount dco_decode_tx_account(dynamic raw);

  @protected
  TxMemo dco_decode_tx_memo(dynamic raw);

  @protected
  TxNote dco_decode_tx_note(dynamic raw);

  @protected
  TxOutput dco_decode_tx_output(dynamic raw);

  @protected
  TxPlan dco_decode_tx_plan(dynamic raw);

  @protected
  TxPlanIn dco_decode_tx_plan_in(dynamic raw);

  @protected
  TxPlanOut dco_decode_tx_plan_out(dynamic raw);

  @protected
  TxSpend dco_decode_tx_spend(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  BigInt dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  UsizeArray3 dco_decode_usize_array_3(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  Mempool
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
          SseDeserializer deserializer);

  @protected
  Mempool
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
          SseDeserializer deserializer);

  @protected
  Mempool
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
          SseDeserializer deserializer);

  @protected
  RustStreamSink<DKGStatus> sse_decode_StreamSink_dkg_status_Sse(
      SseDeserializer deserializer);

  @protected
  RustStreamSink<LogMessage> sse_decode_StreamSink_log_message_Sse(
      SseDeserializer deserializer);

  @protected
  RustStreamSink<MempoolMsg> sse_decode_StreamSink_mempool_msg_Sse(
      SseDeserializer deserializer);

  @protected
  RustStreamSink<SigningStatus> sse_decode_StreamSink_signing_status_Sse(
      SseDeserializer deserializer);

  @protected
  RustStreamSink<SyncProgress> sse_decode_StreamSink_sync_progress_Sse(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  Account sse_decode_account(SseDeserializer deserializer);

  @protected
  AccountUpdate sse_decode_account_update(SseDeserializer deserializer);

  @protected
  Addresses sse_decode_addresses(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  AccountUpdate sse_decode_box_autoadd_account_update(
      SseDeserializer deserializer);

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  Category sse_decode_box_autoadd_category(SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  FrostParams sse_decode_box_autoadd_frost_params(SseDeserializer deserializer);

  @protected
  NewAccount sse_decode_box_autoadd_new_account(SseDeserializer deserializer);

  @protected
  PaymentOptions sse_decode_box_autoadd_payment_options(
      SseDeserializer deserializer);

  @protected
  PcztPackage sse_decode_box_autoadd_pczt_package(SseDeserializer deserializer);

  @protected
  Seed sse_decode_box_autoadd_seed(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  Category sse_decode_category(SseDeserializer deserializer);

  @protected
  DKGStatus sse_decode_dkg_status(SseDeserializer deserializer);

  @protected
  DustChangePolicy sse_decode_dust_change_policy(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  Folder sse_decode_folder(SseDeserializer deserializer);

  @protected
  FrostParams sse_decode_frost_params(SseDeserializer deserializer);

  @protected
  FrostSignParams sse_decode_frost_sign_params(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<Account> sse_decode_list_account(SseDeserializer deserializer);

  @protected
  List<Category> sse_decode_list_category(SseDeserializer deserializer);

  @protected
  List<Folder> sse_decode_list_folder(SseDeserializer deserializer);

  @protected
  List<Memo> sse_decode_list_memo(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_32_loose(SseDeserializer deserializer);

  @protected
  Uint32List sse_decode_list_prim_u_32_strict(SseDeserializer deserializer);

  @protected
  Uint64List sse_decode_list_prim_u_64_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  Uint64List sse_decode_list_prim_usize_strict(SseDeserializer deserializer);

  @protected
  List<Recipient> sse_decode_list_recipient(SseDeserializer deserializer);

  @protected
  List<(String, double, bool)> sse_decode_list_record_string_f_64_bool(
      SseDeserializer deserializer);

  @protected
  List<(int, double)> sse_decode_list_record_u_32_f_64(
      SseDeserializer deserializer);

  @protected
  List<(int, String, PlatformInt64)> sse_decode_list_record_u_32_string_i_64(
      SseDeserializer deserializer);

  @protected
  List<TAddressTxCount> sse_decode_list_t_address_tx_count(
      SseDeserializer deserializer);

  @protected
  List<Tx> sse_decode_list_tx(SseDeserializer deserializer);

  @protected
  List<TxMemo> sse_decode_list_tx_memo(SseDeserializer deserializer);

  @protected
  List<TxNote> sse_decode_list_tx_note(SseDeserializer deserializer);

  @protected
  List<TxOutput> sse_decode_list_tx_output(SseDeserializer deserializer);

  @protected
  List<TxPlanIn> sse_decode_list_tx_plan_in(SseDeserializer deserializer);

  @protected
  List<TxPlanOut> sse_decode_list_tx_plan_out(SseDeserializer deserializer);

  @protected
  List<TxSpend> sse_decode_list_tx_spend(SseDeserializer deserializer);

  @protected
  LogMessage sse_decode_log_message(SseDeserializer deserializer);

  @protected
  Memo sse_decode_memo(SseDeserializer deserializer);

  @protected
  MempoolMsg sse_decode_mempool_msg(SseDeserializer deserializer);

  @protected
  NewAccount sse_decode_new_account(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  FrostParams? sse_decode_opt_box_autoadd_frost_params(
      SseDeserializer deserializer);

  @protected
  Seed? sse_decode_opt_box_autoadd_seed(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  BigInt? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  Uint8List? sse_decode_opt_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<Recipient>? sse_decode_opt_list_recipient(SseDeserializer deserializer);

  @protected
  PaymentOptions sse_decode_payment_options(SseDeserializer deserializer);

  @protected
  PcztPackage sse_decode_pczt_package(SseDeserializer deserializer);

  @protected
  PoolBalance sse_decode_pool_balance(SseDeserializer deserializer);

  @protected
  Receivers sse_decode_receivers(SseDeserializer deserializer);

  @protected
  Recipient sse_decode_recipient(SseDeserializer deserializer);

  @protected
  (String, double, bool) sse_decode_record_string_f_64_bool(
      SseDeserializer deserializer);

  @protected
  (int, double) sse_decode_record_u_32_f_64(SseDeserializer deserializer);

  @protected
  (int, String, PlatformInt64) sse_decode_record_u_32_string_i_64(
      SseDeserializer deserializer);

  @protected
  Seed sse_decode_seed(SseDeserializer deserializer);

  @protected
  ServerType sse_decode_server_type(SseDeserializer deserializer);

  @protected
  SigningStatus sse_decode_signing_status(SseDeserializer deserializer);

  @protected
  SyncHeight sse_decode_sync_height(SseDeserializer deserializer);

  @protected
  SyncProgress sse_decode_sync_progress(SseDeserializer deserializer);

  @protected
  TAddressTxCount sse_decode_t_address_tx_count(SseDeserializer deserializer);

  @protected
  Tx sse_decode_tx(SseDeserializer deserializer);

  @protected
  TxAccount sse_decode_tx_account(SseDeserializer deserializer);

  @protected
  TxMemo sse_decode_tx_memo(SseDeserializer deserializer);

  @protected
  TxNote sse_decode_tx_note(SseDeserializer deserializer);

  @protected
  TxOutput sse_decode_tx_output(SseDeserializer deserializer);

  @protected
  TxPlan sse_decode_tx_plan(SseDeserializer deserializer);

  @protected
  TxPlanIn sse_decode_tx_plan_in(SseDeserializer deserializer);

  @protected
  TxPlanOut sse_decode_tx_plan_out(SseDeserializer deserializer);

  @protected
  TxSpend sse_decode_tx_spend(SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  UsizeArray3 sse_decode_usize_array_3(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
          Mempool self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
          Mempool self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
          Mempool self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_dkg_status_Sse(
      RustStreamSink<DKGStatus> self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_log_message_Sse(
      RustStreamSink<LogMessage> self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_mempool_msg_Sse(
      RustStreamSink<MempoolMsg> self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_signing_status_Sse(
      RustStreamSink<SigningStatus> self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_sync_progress_Sse(
      RustStreamSink<SyncProgress> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_account(Account self, SseSerializer serializer);

  @protected
  void sse_encode_account_update(AccountUpdate self, SseSerializer serializer);

  @protected
  void sse_encode_addresses(Addresses self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_account_update(
      AccountUpdate self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_category(Category self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_frost_params(
      FrostParams self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_account(
      NewAccount self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_payment_options(
      PaymentOptions self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_pczt_package(
      PcztPackage self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_seed(Seed self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_category(Category self, SseSerializer serializer);

  @protected
  void sse_encode_dkg_status(DKGStatus self, SseSerializer serializer);

  @protected
  void sse_encode_dust_change_policy(
      DustChangePolicy self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_folder(Folder self, SseSerializer serializer);

  @protected
  void sse_encode_frost_params(FrostParams self, SseSerializer serializer);

  @protected
  void sse_encode_frost_sign_params(
      FrostSignParams self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_account(List<Account> self, SseSerializer serializer);

  @protected
  void sse_encode_list_category(List<Category> self, SseSerializer serializer);

  @protected
  void sse_encode_list_folder(List<Folder> self, SseSerializer serializer);

  @protected
  void sse_encode_list_memo(List<Memo> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_strict(
      Uint32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_64_strict(
      Uint64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_usize_strict(
      Uint64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_recipient(
      List<Recipient> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_f_64_bool(
      List<(String, double, bool)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_u_32_f_64(
      List<(int, double)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_u_32_string_i_64(
      List<(int, String, PlatformInt64)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_t_address_tx_count(
      List<TAddressTxCount> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx(List<Tx> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_memo(List<TxMemo> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_note(List<TxNote> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_output(List<TxOutput> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_plan_in(
      List<TxPlanIn> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_plan_out(
      List<TxPlanOut> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_spend(List<TxSpend> self, SseSerializer serializer);

  @protected
  void sse_encode_log_message(LogMessage self, SseSerializer serializer);

  @protected
  void sse_encode_memo(Memo self, SseSerializer serializer);

  @protected
  void sse_encode_mempool_msg(MempoolMsg self, SseSerializer serializer);

  @protected
  void sse_encode_new_account(NewAccount self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_64(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_frost_params(
      FrostParams? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_seed(Seed? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(BigInt? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_8_strict(
      Uint8List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_recipient(
      List<Recipient>? self, SseSerializer serializer);

  @protected
  void sse_encode_payment_options(
      PaymentOptions self, SseSerializer serializer);

  @protected
  void sse_encode_pczt_package(PcztPackage self, SseSerializer serializer);

  @protected
  void sse_encode_pool_balance(PoolBalance self, SseSerializer serializer);

  @protected
  void sse_encode_receivers(Receivers self, SseSerializer serializer);

  @protected
  void sse_encode_recipient(Recipient self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_f_64_bool(
      (String, double, bool) self, SseSerializer serializer);

  @protected
  void sse_encode_record_u_32_f_64(
      (int, double) self, SseSerializer serializer);

  @protected
  void sse_encode_record_u_32_string_i_64(
      (int, String, PlatformInt64) self, SseSerializer serializer);

  @protected
  void sse_encode_seed(Seed self, SseSerializer serializer);

  @protected
  void sse_encode_server_type(ServerType self, SseSerializer serializer);

  @protected
  void sse_encode_signing_status(SigningStatus self, SseSerializer serializer);

  @protected
  void sse_encode_sync_height(SyncHeight self, SseSerializer serializer);

  @protected
  void sse_encode_sync_progress(SyncProgress self, SseSerializer serializer);

  @protected
  void sse_encode_t_address_tx_count(
      TAddressTxCount self, SseSerializer serializer);

  @protected
  void sse_encode_tx(Tx self, SseSerializer serializer);

  @protected
  void sse_encode_tx_account(TxAccount self, SseSerializer serializer);

  @protected
  void sse_encode_tx_memo(TxMemo self, SseSerializer serializer);

  @protected
  void sse_encode_tx_note(TxNote self, SseSerializer serializer);

  @protected
  void sse_encode_tx_output(TxOutput self, SseSerializer serializer);

  @protected
  void sse_encode_tx_plan(TxPlan self, SseSerializer serializer);

  @protected
  void sse_encode_tx_plan_in(TxPlanIn self, SseSerializer serializer);

  @protected
  void sse_encode_tx_plan_out(TxPlanOut self, SseSerializer serializer);

  @protected
  void sse_encode_tx_spend(TxSpend self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_usize_array_3(UsizeArray3 self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempoolPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_zkool_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempoolPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempoolPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_zkool_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempool =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerMempoolPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
}
