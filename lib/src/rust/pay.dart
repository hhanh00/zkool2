// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class Recipient {
  final String address;
  final BigInt amount;
  final int? pools;
  final String? userMemo;
  final Uint8List? memoBytes;

  const Recipient({
    required this.address,
    required this.amount,
    this.pools,
    this.userMemo,
    this.memoBytes,
  });

  @override
  int get hashCode =>
      address.hashCode ^
      amount.hashCode ^
      pools.hashCode ^
      userMemo.hashCode ^
      memoBytes.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Recipient &&
          runtimeType == other.runtimeType &&
          address == other.address &&
          amount == other.amount &&
          pools == other.pools &&
          userMemo == other.userMemo &&
          memoBytes == other.memoBytes;
}

class TxPlan {
  final int height;
  final List<TxPlanIn> inputs;
  final List<TxPlanOut> outputs;
  final BigInt fee;
  final bool canSign;
  final bool canBroadcast;

  const TxPlan({
    required this.height,
    required this.inputs,
    required this.outputs,
    required this.fee,
    required this.canSign,
    required this.canBroadcast,
  });

  @override
  int get hashCode =>
      height.hashCode ^
      inputs.hashCode ^
      outputs.hashCode ^
      fee.hashCode ^
      canSign.hashCode ^
      canBroadcast.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TxPlan &&
          runtimeType == other.runtimeType &&
          height == other.height &&
          inputs == other.inputs &&
          outputs == other.outputs &&
          fee == other.fee &&
          canSign == other.canSign &&
          canBroadcast == other.canBroadcast;
}

class TxPlanIn {
  final int pool;
  final BigInt? amount;

  const TxPlanIn({
    required this.pool,
    this.amount,
  });

  @override
  int get hashCode => pool.hashCode ^ amount.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TxPlanIn &&
          runtimeType == other.runtimeType &&
          pool == other.pool &&
          amount == other.amount;
}

class TxPlanOut {
  final int pool;
  final BigInt amount;
  final String address;

  const TxPlanOut({
    required this.pool,
    required this.amount,
    required this.address,
  });

  @override
  int get hashCode => pool.hashCode ^ amount.hashCode ^ address.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TxPlanOut &&
          runtimeType == other.runtimeType &&
          pool == other.pool &&
          amount == other.amount &&
          address == other.address;
}
