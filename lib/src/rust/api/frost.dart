// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'frost.freezed.dart';

// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `DKGParams`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `fmt`

Future<void> setDkgParams(
        {required String name,
        required int id,
        required int n,
        required int t,
        required int fundingAccount}) =>
    RustLib.instance.api.crateApiFrostSetDkgParams(
        name: name, id: id, n: n, t: t, fundingAccount: fundingAccount);

Future<DKGStatus> dkg() => RustLib.instance.api.crateApiFrostDkg();

Future<void> setDkgAddress({required int id, required String address}) =>
    RustLib.instance.api.crateApiFrostSetDkgAddress(id: id, address: address);

@freezed
sealed class DKGStatus with _$DKGStatus {
  const DKGStatus._();

  const factory DKGStatus.waitParams() = DKGStatus_WaitParams;
  const factory DKGStatus.waitAddresses(
    List<String> field0,
  ) = DKGStatus_WaitAddresses;
  const factory DKGStatus.waitRound1Pkg() = DKGStatus_WaitRound1Pkg;
  const factory DKGStatus.waitRound2Pkg() = DKGStatus_WaitRound2Pkg;
  const factory DKGStatus.finalize() = DKGStatus_Finalize;
  const factory DKGStatus.sharedAddress(
    String field0,
  ) = DKGStatus_SharedAddress;
}
