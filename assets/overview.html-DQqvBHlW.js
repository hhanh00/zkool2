import{_ as r,c as l,a as t,b as o,d as n,e as i,w as s,r as c,o as d}from"./app-CoEEKCt3.js";const u={};function h(p,e){const a=c("RouteLink");return d(),l("div",null,[e[9]||(e[9]=t("p",null,[n("Zkool supports multisignature accounts that leverage the "),t("strong",null,"FROST"),n(" technology.")],-1)),e[10]||(e[10]=t("p",null,"Multisignature accounts differ from standard accounts in several ways.",-1)),e[11]||(e[11]=t("div",{class:"hint-container warning"},[t("p",{class:"hint-container-title"},"Warning"),t("p",null,"I highly recommend you read this section since MultiSignature accounts may not behave as you expect.")],-1)),t("ul",null,[t("li",null,[e[1]||(e[1]=n("MultiSignature Accounts (MSig Acct) are created via a distributed Key Generation process described in the ",-1)),i(a,{to:"/frost/dkg.html"},{default:s(()=>e[0]||(e[0]=[n("Distributed Key Generation (DKG)",-1)])),_:1,__:[0]}),e[2]||(e[2]=n(" section.",-1))]),e[6]||(e[6]=t("li",null,"A MSig Acct involves a several entities/individuals who create the shared address of the account.",-1)),e[7]||(e[7]=t("li",null,"During DKG, the number of signers needed for a payment is set.",-1)),t("li",null,[e[4]||(e[4]=n('For example: a "2 out of 3" MSig Acct requires 2 participants out of the 3 account creators to ',-1)),i(a,{to:"/frost/mpc.html"},{default:s(()=>e[3]||(e[3]=[n("sign a transaction",-1)])),_:1,__:[3]}),e[5]||(e[5]=n(".",-1))]),e[8]||(e[8]=o('<li>The MSig Accts do not have a known secret key<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>. They has a unified viewing key and of course an address.</li><li>Funds sent to the MSig Acct address ends up in the account, just like for a standard account. From an external point of view, a MSig Acct is undistinguishable for a standard account<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>.</li><li>MSig Accts are Orchard. They do not have a transparent nor a sapling receiver.</li><li>MSig Accts have diversified addresses. New addresses can be generated by any participant without coordinating with the others.</li><li>MSig Accts do not have a seed phrase. They do not have a complete secret key. They have a <em>share</em> of the secret key.</li><li>You cannot backup a MSig Acct like a regular account (since they do not have a seed phrase), but you can and <em>should</em> export the account.</li><li>DKG and Signing</li>',7))]),e[12]||(e[12]=o('<div class="hint-container important"><p class="hint-container-title">Important</p><p>Save your MSig Acct by exporting it, or by saving the whole database file. It has your <em>share</em> of the secret key.</p></div><h2 id="dkg-and-signing-multi-party-ceremonies" tabindex="-1"><a class="header-anchor" href="#dkg-and-signing-multi-party-ceremonies"><span>DKG and Signing Multi Party Ceremonies</span></a></h2><p>The Distributed Key Generation and the Multi Party Signing are multi step workflows that involve the transmission of secure messages between the participants.</p><p>Zkool uses the Zcash blockchain and leverages encrypted memos to send and receives the commitments, signature packages, signature shares, etc.</p><h3 id="funding" tabindex="-1"><a class="header-anchor" href="#funding"><span>Funding</span></a></h3><p>The communication necessitates a bit of ZEC to pay for the transaction fees.</p><p>They should be in a separate account from the MultiSig Account. This is called the <strong>funding account</strong>.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>0.25 ZEC should be more than enough for ~100 multisig transactions.</p></div><p>If the funding account does not have enough, the DKG or SIGN will return an error. You can add more funds and resume the operation.</p><h3 id="sequentiality" tabindex="-1"><a class="header-anchor" href="#sequentiality"><span>Sequentiality</span></a></h3><div class="hint-container important"><p class="hint-container-title">Important</p><p>A given database can only process <em>one DKG</em> and <em>one SIGN</em> at a time. If you need to make more than one, you need to use another database file.</p></div><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>There is a secret key but it is split between the participants and unknown by any single participant. <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>Unlike for Bitcoin where the multisig account have a different prefix than standard p2wkh. <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li></ol></section>',13))])}const m=r(u,[["render",h]]),g=JSON.parse('{"path":"/frost/overview.html","title":"Overview","lang":"en-US","frontmatter":{"title":"Overview"},"git":{"updatedTime":1756131277000,"contributors":[{"name":"Hanh","username":"Hanh","email":"hanh425@gmail.com","commits":1,"url":"https://github.com/Hanh"}],"changelog":[{"hash":"78863f40870b982289b0cfb6427be3b01596696b","time":1756131277000,"email":"hanh425@gmail.com","author":"Hanh","message":"security"}]},"filePathRelative":"frost/overview.md"}');export{m as comp,g as data};
