import{_ as e,c as a,a as o,o as n}from"./app-y5f7CVCi.js";const i="/zkool2/assets/08.addresses-CKYfCOky.png",s="/zkool2/assets/09.multisig-CvDynZw6.png",r="/zkool2/assets/10.send-DwgLocXH.png",c="/zkool2/assets/11.send-M3EsyPmn.png",p="/zkool2/assets/12.commitments-GNSrC-0E.png",h="/zkool2/assets/13.load-DfTVWt9m.png",l="/zkool2/assets/14.tx-C-wI-Dj2.png",d="/zkool2/assets/15.history-NRx8mVPy.png",u={};function g(f,t){return n(),a("div",null,t[0]||(t[0]=[o('<h2 id="receiving-funds" tabindex="-1"><a class="header-anchor" href="#receiving-funds"><span>Receiving Funds</span></a></h2><p>The MultiSig Account works like a standard Orchard account for receiving funds. The address is on the &quot;Address&quot; page. You can get more addresses<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup> by tapping on the &quot;next&quot; button.</p><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements"><span>Requirements</span></a></h2><p>Like with DKG, you need to have a funding account to pay for the transaction fees of the FROST SIGN protocol. You should to have ~0.01 ZEC in it.</p><figure><img src="'+s+'" alt="Requirements" tabindex="0" loading="lazy"><figcaption>Requirements</figcaption></figure><h2 id="starting-a-payment" tabindex="-1"><a class="header-anchor" href="#starting-a-payment"><span>Starting a payment</span></a></h2><p>Spending from the MultiSig Account differs from a standard account. It begins the same way, with the specification of the recipients with addresses and memos. A multisig transaction can be exactly like a standard transaction: It is usually input manually or by copy pasting, but it can also have multiple recipients, use a payment URI, or be loaded from a file.</p><figure><img src="'+r+'" alt="Payment" tabindex="0" loading="lazy"><figcaption>Payment</figcaption></figure><ul><li>Save the transaction by tapping on the &quot;SAVE&quot; button and choosing an output file. This <em>unsigned</em> transaction will need to be sent to the other signers.</li><li>Start the SIGN process by tapping on the &quot;MPC&quot; button.</li></ul><h2 id="mpc-sign" tabindex="-1"><a class="header-anchor" href="#mpc-sign"><span>MPC SIGN</span></a></h2><p>The Signing process requires a number of participants equal to the signature threshold defined at the creation of the MultiSig Account: The M in &quot;M out of N&quot;. In out example, we need two signers.</p><p>The Signing process needs one participant to be the <em>coordinator</em> of the Multi Party Ceremony (MPC). The coordinator is implicitly one of the signer. Typically, they are also the participant who proposes the transaction.</p><p>Since this is a 2 out 3 MultiSig Account, we just need another signer.</p><figure><img src="'+c+'" alt="Send" tabindex="0" loading="lazy"><figcaption>Send</figcaption></figure><ol><li>Enter the ID of the coordinator. Every participant <strong>must</strong> enter the same coordinator ID.</li><li>Select the <em>funding account</em>.</li></ol><p>Tap the NEXT button to start the MPC SIGN.</p><h3 id="coordinator" tabindex="-1"><a class="header-anchor" href="#coordinator"><span>Coordinator</span></a></h3><figure><img src="'+p+'" alt="Commitments" tabindex="0" loading="lazy"><figcaption>Commitments</figcaption></figure><p>The coordinator waits for commitment messages from the other participants.</p><h3 id="other-participant" tabindex="-1"><a class="header-anchor" href="#other-participant"><span>Other Participant</span></a></h3><p>The coordinator must send the unsigned transaction file to the other participants. It can be done out of band, by email, by USB, by posting on the shared drive, etc. The transaction file has the details of the transaction but does not contain any signature.</p><p>The other participants should open the transaction file:</p><ul><li>Start a transaction,</li><li>Tap on the &quot;Load Tx&quot; button and pick the transaction file.</li></ul><figure><img src="'+h+'" alt="Load Tx" tabindex="0" loading="lazy"><figcaption>Load Tx</figcaption></figure><div class="hint-container important"><p class="hint-container-title">Important</p><p>Every participant should <strong>CHECK</strong> the transaction before signing it.</p></div><p>You sign the transaction you load, and your signature (share) cannot be tampered. You are safe as long as you make sure to <strong>CHECK</strong> the transaction.</p><p>Then tap on the MPC button to start the SIGN process on the participant side.</p><blockquote><p>The MPC completes on a participant with the message &quot;Signing Completed&quot;. They can close the page. The coordinator will send the signed transaction once all the signature shares are received.</p></blockquote><h3 id="finishing-up" tabindex="-1"><a class="header-anchor" href="#finishing-up"><span>Finishing up</span></a></h3><p>The coordinator collects the signature shares from the other participant and adds their own share to form the complete signature. Then it builds the full transaction and broadcasts it to the network.</p><p>Once it finishes, you will see the transaction ID.</p><blockquote><p>The MPC completes on the coordinator with the Transaction ID.</p></blockquote><figure><img src="'+l+'" alt="Tx" tabindex="0" loading="lazy"><figcaption>Tx</figcaption></figure><p>Once it is mined. It will appear in the account transaction history<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>.</p><figure><img src="'+d+'" alt="History" tabindex="0" loading="lazy"><figcaption>History</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>As with DKG, the SIGN is automatic as long as Zkool is opened on the multisig page. If you close it, you can resume the process by loading the transaction and tapping on the MPC button.</p></div><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>Diversified addresses. <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>A MultiSig Transaction is undistinguishable from a standard transaction unlike MultiSig in Bitcoin. <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li></ol></section>',39)]))}const b=e(u,[["render",g]]),y=JSON.parse('{"path":"/frost/mpc.html","title":"Signing a Transaction","lang":"en-US","frontmatter":{"title":"Signing a Transaction"},"git":{"updatedTime":1760831004000,"contributors":[{"name":"Hanh","username":"Hanh","email":"hanh425@gmail.com","commits":1,"url":"https://github.com/Hanh"}],"changelog":[{"hash":"3232f0cbd01472f529ddb0de39714f6594baeb31","time":1760831004000,"email":"hanh425@gmail.com","author":"Hanh","message":"update readme"}]},"filePathRelative":"frost/mpc.md"}');export{b as comp,y as data};
