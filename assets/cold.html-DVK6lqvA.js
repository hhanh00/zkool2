import{_ as e,c as a,a as n,o}from"./app-Gv1lDGGt.js";const i="/zkool2/assets/06.ufvk-YuvZp1dy.png",s="/zkool2/assets/07.save-DxeTKZBG.png",c="/zkool2/assets/08.load-CjTn6Rxm.png",r="/zkool2/assets/09.sign-3Zc5VGN5.png",l="/zkool2/assets/10.broadcast-Wh5nmDLo.png",h={};function p(d,t){return o(),a("div",null,t[0]||(t[0]=[n('<blockquote><p>A Cold Wallet is a wallet that has secret keys but remains disconnected from the Internet <strong>at all times</strong>.</p></blockquote><p>It is not sufficient to be disconnected <em>most of the time</em>. For instance, a wallet on a phone that it is turned on only when making transactions is NOT a cold wallet.</p><p>To make a payment, there needs to be another wallet that connects to the Zcash network and synchronizes the blockchain data. This wallet has the account <em>viewing key</em> to properly identify the wallet transactions but is not capable of spending any funds. We&#39;ll call it the &quot;Hot Viewing Wallet&quot;<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>.</p><p>You have two copies of Zkool: The &quot;Hot Viewing Wallet&quot; (HVW) and the &quot;Cold Wallet&quot; (CW).</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>To make sure the Cold Wallet does not connect to the Internet, you can turn off WIFI and Mobile Data. Zkool has a setting that puts the wallet &quot;OFFLINE&quot; as well.</p></div><h2 id="setup" tabindex="-1"><a class="header-anchor" href="#setup"><span>Setup</span></a></h2><ol><li>Start on the CW. Create a new account. Backup the seed phrase to a safe place (do not put the seed phrase on your phone or in the Cloud).</li><li>Show the UFVK (Edit the account and tap the &quot;Show Viewing Key&quot; button)</li></ol><figure><img src="'+i+'" alt="UFVK" tabindex="0" loading="lazy"><figcaption>UFVK</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Scan the QR code on the HVW and restore a wallet using it as the Key.</p></div><ol start="3"><li>Synchronize it.</li></ol><div class="hint-container important"><p class="hint-container-title">Important</p><ul><li>Make sure you keep the cold wallet offline.</li><li>Make sure you do not have a copy of the seed phrase on a device that can connect to the Internet.</li></ul></div><h2 id="payments" tabindex="-1"><a class="header-anchor" href="#payments"><span>Payments</span></a></h2><h3 id="step-1-make-the-unsigned-transaction" tabindex="-1"><a class="header-anchor" href="#step-1-make-the-unsigned-transaction"><span>Step 1: Make the <strong>Unsigned</strong> Transaction</span></a></h3><p>Use the HVW to monitor incoming transactions and verify outgoing payments. To start a payment from the account, use the HCW and enter the details of the payment as usual.</p><figure><img src="'+s+'" alt="Save Tx" tabindex="0" loading="lazy"><figcaption>Save Tx</figcaption></figure><p>Once you reach the final screen with the Transaction Plan, you probably will notice that the &quot;SEND&quot; icon has been replaced by a &quot;SAVE&quot; icon. This indicates that the account cannot sign the transaction and is view/watch-only.</p><p>Use this to make a PCZT (Partially Created Zcash Transaction) file.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Use a <em>clean</em> USB drive to move the PCZT file. The file does not have secret data but contains the details of the transaction. It is better not to put it online if the transaction has to remain absolutely private. If your devices have cameras, you can use the <a href="https://github.com/hhanh00/animated-qr" target="_blank" rel="noopener noreferrer">AnimatedQR</a> app on Github and the Google/Apple Store<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup> to transfer the file via QR Codes.</p></div><h3 id="step-2-sign-the-transaction" tabindex="-1"><a class="header-anchor" href="#step-2-sign-the-transaction"><span>Step 2: Sign the Transaction</span></a></h3><p>Load the file on the CW in the account that has the secret key.</p><figure><img src="'+c+'" alt="Load tx" tabindex="0" loading="lazy"><figcaption>Load tx</figcaption></figure><p>Sign the transaction</p><figure><img src="'+r+'" alt="Sign Tx" tabindex="0" loading="lazy"><figcaption>Sign Tx</figcaption></figure><div class="hint-container important"><p class="hint-container-title">Important</p><p>Make sure you <strong>CHECK</strong> the transaction before signing.</p></div><p>Save the transaction and transfer the file back to the HVW using the same mechanism as before but in the reverse direction.</p><h3 id="step-3-broadcast-the-signed-transaction" tabindex="-1"><a class="header-anchor" href="#step-3-broadcast-the-signed-transaction"><span>Step 3: Broadcast the Signed Transaction</span></a></h3><p>Load the transaction on the HVW in the account that has the viewing key.</p><figure><img src="'+l+'" alt="Broadcast" tabindex="0" loading="lazy"><figcaption>Broadcast</figcaption></figure><p>Press the Send button to send the transaction out.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>You should check one last time that the transaction is as you want. This is the final step.</p></div><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>A hot wallet is a wallet connected to the Internet. <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>By the same author <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li></ol></section>',32)]))}const f=e(h,[["render",p]]),g=JSON.parse('{"path":"/recipe/cold.html","title":"Cold Wallet","lang":"en-US","frontmatter":{"title":"Cold Wallet"},"git":{"updatedTime":1760450418000,"contributors":[{"name":"Hanh Huynh Huu","username":"","email":"hanh425@gmail.com","commits":1}],"changelog":[{"hash":"abe9b29d42b4c750fe49d29b4205409d2a6ab048","time":1760450418000,"email":"hanh425@gmail.com","author":"Hanh Huynh Huu","message":"ledger"}]},"filePathRelative":"recipe/cold.md"}');export{f as comp,g as data};
