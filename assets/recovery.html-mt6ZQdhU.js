import{_ as t,c as s,a,o}from"./app-BIfDIXQR.js";const n={};function r(i,e){return o(),s("div",null,e[0]||(e[0]=[a(`<h1 id="recovery" tabindex="-1"><a class="header-anchor" href="#recovery"><span>Recovery</span></a></h1><p>One of the distinctive features of Zkool is its ability to recover accounts from various types of keys.</p><p>The main key type is the <strong>seed phrase</strong>, but Zkool supports more a half dozen types of keys. They usually come from older wallet apps that didn&#39;t support seed phrases, or used for specific purposes.</p><h2 id="keys" tabindex="-1"><a class="header-anchor" href="#keys"><span>Keys</span></a></h2><p>Let&#39;s see what keys are available:</p><ul><li>A Seed phrase. They come in lengths of 12, 15, 18, 21 or 24 words. Currently, the 24 word variant is the most commonly used. An extra <strong>password</strong> (usually a single word) can be added. It defaults to empty.</li></ul><p>Zkool supports any of these lengths. From a seed phrase, the password and the <strong>account index<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></strong>, Zkool derives the Transparent, Sapling and Orchard <strong>extended secret keys</strong>.</p><div class="language-admonish line-numbers-mode" data-highlighter="prismjs" data-ext="admonish"><pre><code class="language-admonish"><span class="line">Extended Secret Keys are secret keys, i.e. keys that allow the</span>
<span class="line">spending of funds, that are extended to allow for the derivation</span>
<span class="line">of additional addresses.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Transparent or Sapling<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup> extended secret keys. The former begins with <code>xprv</code>, while the later begins with <code>secret-extended-key</code>. These allow the creation of an account with a single pool.</p></li><li><p>Transparent has an extended public key format. They begin with <code>xpub</code>. It allows the derivation of multiple transparent addresses, but they cannot be used to spend funds.</p></li><li><p>Sapling has a legacy format for extended viewing keys. They begin with <code>zxviews</code>. They give access to the entire transaction history (past and future), but they cannot be used to spend funds.</p></li><li><p>Unified Viewing keys (UVK) combine one or many different types of viewing keys<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>. This is the better format for viewing keys. For example, a UVK can be a group of a transparent and sapling viewing key. Or it could be an Orchard viewing key by itself. UVK begins with <code>uview</code>.</p></li></ul><p>These keys offer <strong>address diversification</strong>.</p><p>The last type of key supported is the transparent private key. This is used by old wallets that do not feature either address rotation or shielded transactions. A private key begins with <code>K</code> or <code>L</code>.</p><p>A private key corresponds to a single transparent address.</p><div class="language-admonish line-numbers-mode" data-highlighter="prismjs" data-ext="admonish"><pre><code class="language-admonish"><span class="line">In any case, do not forget to enter the birth height</span>
<span class="line">as it can greatly speed up the account synchronization.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If you do not know the birth height exactly, it is still good to input an estimate as long as it <em>lower</em> than the real birth height.</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>The account index enables the derivation of multiple independent accounts from the same seed phrase. By default, wallets use the account index 0. Wallets that support multiple accounts increment the account index for each additional account. <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>Orchard does not expose a standard format for their extended secret keys therefore they cannot be supported. <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p>Any combination of Transparent, Sapling and Orchard viewing keys is possible <em>except</em> for the Transparent key by itself. <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li></ol></section>`,16)]))}const l=t(n,[["render",r]]),c=JSON.parse('{"path":"/src/advanced/recovery.html","title":"Recovery","lang":"en-US","frontmatter":{},"git":{"updatedTime":1760450418000,"contributors":[{"name":"Hanh Huynh Huu","username":"","email":"hanh425@gmail.com","commits":1}],"changelog":[{"hash":"31fd0391645d15bde4d0b3587b524fba37154838","time":1760450418000,"email":"hanh425@gmail.com","author":"Hanh Huynh Huu","message":"ledger"}]},"filePathRelative":"src/advanced/recovery.md"}');export{l as comp,c as data};
