import{_ as t,c as o,b as a,o as s}from"./app-6IW779EX.js";const n="/zkool2/assets/10.addresses-CIgWgIa2.png",r={};function i(d,e){return s(),o("div",null,e[0]||(e[0]=[a('<h2 id="receiving-funds" tabindex="-1"><a class="header-anchor" href="#receiving-funds"><span>Receiving Funds</span></a></h2><p>To receive funds, you need to give one of your account addresses.</p><p>They are shown on the receive page.</p><p>From the account page, tap on the receive button on the appbar (it looks like a download icon).</p><figure><img src="'+n+'" alt="Addresses" tabindex="0" loading="lazy"><figcaption>Addresses</figcaption></figure><p>Funds sent to any of these addresses will be available to spend.</p><p>But wait, there are four addresses. Which address should be used?</p><p>That depends on the wallet app of the sender and what pool you want to get.</p><p>The address that begins with a <code>t</code> is for the <strong>Transparent</strong> pool. Using this address makes the amount and receiver (ie. you) fully public<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>. However, transparent addresses are supported by every Zcash wallet, including the multi currency wallets and the crypto exchanges.</p><p>The Sapling address and &quot;Orchard Only&quot; address are shielded addresses. Using them will hide the details of the transaction. The address and the amount received are fully hidden from others<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>.</p><p><strong>Sapling</strong> is the &quot;older&quot; shielded technology. It has been superseded by <strong>Orchard</strong>. However, some older wallet apps may not support Orchard<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup> yet.</p><p>And finally, there is the &quot;Unified Address&quot;. It is a container of addresses (called receivers in this context) which can have any combination of Transparent, Sapling and Orchard (except for transparent alone). Using this address essentially means: &quot;Here are my wallet addresses, please pick one&quot;.</p><p>Generally, you expect the sender app to choose the &quot;best&quot; address it can use, ie Orchard, but fall back to another type.</p><div class="hint-container important"><p class="hint-container-title">Important</p><p>A Unified Address can contain a transparent address. You <strong>should not</strong> assume that a <code>u</code> address is shielded only.</p></div><p>Wallet apps are encouraged to present a Unified Address without a transparent component.</p><p>Considering all of the above, there is little upside to using a UA that has more than Orchard:</p><ul><li>If the sender can use Sapling, it likely can use Orchard,</li><li>if the sender cannot use Orchard nor Sapling, it likely cannot use UA either.</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Use the &quot;Orchard Only&quot; if possible. Use Transparent otherwise.</p></div><p>This is sufficient for most users. However, if you want more privacy, you may need to use <strong>diversified addresses</strong>.</p><h2 id="diversified-addresses" tabindex="-1"><a class="header-anchor" href="#diversified-addresses"><span>Diversified Addresses</span></a></h2><p>For simplicity, I&#39;ll assume that you are using a seed phrase and didn&#39;t exclude any pool.</p><p>You currently have a <em>set</em> of addresses: one for each pool. I don&#39;t count the unified address with multiple receivers since it is just a combination of the other addresses.</p><p>An account can have multiple sets of addresses. There are billions of them, all derived from the same seed phrase (and an account index). They have their own index. At 0, you have a set. Then at index 1, you have another set, and etc<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup>.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>To generate a new set. Press the button that looks like a &quot;play next&quot; (in the red box).</p></div><p>The next part is about how the diversified addresses work. You can skip it if you are not interested in the details but I recommend reading it because it has some useful information about shielded and transparent address rotation.</p><p>The main thing to know is that:</p><blockquote><p>All the shielded addresses (of an account) use the same decryption key.</p></blockquote><p>When you receive funds at any shielded address, Zkool will be able to decrypt them and credit your account <strong>in one try</strong>.</p><p>Synchronization is a lot of trial and error. We have one key and millions of transactions. Since we don&#39;t want to reveal our decryption key, the wallet app has to try to decrypt every transaction itself and fail 99.9999% of the time because our key will not be correct since we are involved in a very small part of the global usage of Zcash<sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup>.</p><p>So we definitively don&#39;t want to try more than one key because that would multiply the number of attempts at decryption.</p><p>The good news is that with Sapling and Orchard, the same key works with any set.</p><p>Shielded decryption looks like a master key to a building. It can unlock every door but will not work in a different building.</p><p>Transparent addresses are different. Every transparent address has its own secret key (derived from the seed phrase, account index and address index).</p><blockquote><p>Transparent addresses use different decryption keys (but derived from the same seed)</p></blockquote><p>Zkool monitors a few transparent addresses, but it cannot monitor all the addresses because there are billions. When you generate a new set, the wallet adds it to its pool of known addresses. This way, it will still recognize transactions that use previous addresses.</p><blockquote><p>Wallet apps are expected to use indices sequentially.</p></blockquote><p>For recovery, Zkool just needs to scan a range of indices and stop when it cannot find any funds after a certain number of attempts<sup class="footnote-ref"><a href="#footnote6">[6]</a><a class="footnote-anchor" id="footnote-ref6"></a></sup>.</p><p>This takes time and it is not done by default.</p><div class="hint-container important"><p class="hint-container-title">Important</p><p>If you recover an account from a transparent Zcash wallet that uses address diversification (ie rotation) and cannot find your funds, it is likely because they are not at the expected index. Use the scan button on the appbar to initiate a scan. After a while it will report the number of new addresses found and will add them to the monitoring pool. Then you need to resynchronize from the birth height.</p></div><p>You do not need to do that when you create new diversified addresses in Zkool because it knows the addresses it has created<sup class="footnote-ref"><a href="#footnote7">[7]</a><a class="footnote-anchor" id="footnote-ref7"></a></sup>.</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>Just like with Bitcoin. You are opting out of all privacy features. <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>Obviously, you and the sender know the details. <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p>They are practically extinct by now. <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li><li id="footnote4" class="footnote-item"><p>Due to some limitation of Sapling, there are indices without a Sapling address. To keep addresses in alignment, when a Sapling index is invalid, we skip the whole set, including the Transparent and Orchard parts. <a href="#footnote-ref4" class="footnote-backref">↩︎</a></p></li><li id="footnote5" class="footnote-item"><p>There is no way to query for our <em>shielded</em> transactions since this would completely defeat privacy. <a href="#footnote-ref5" class="footnote-backref">↩︎</a></p></li><li id="footnote6" class="footnote-item"><p>For example if there are no transaction for 50 consecutive addresses. <a href="#footnote-ref6" class="footnote-backref">↩︎</a></p></li><li id="footnote7" class="footnote-item"><p>But you need to scan when you restore the account on a different copy of Zkool. <a href="#footnote-ref7" class="footnote-backref">↩︎</a></p></li></ol></section>',42)]))}const c=t(r,[["render",i]]),p=JSON.parse('{"path":"/guide/addresses.html","title":"Addresses","lang":"en-US","frontmatter":{"title":"Addresses"},"git":{"updatedTime":1756048626000,"contributors":[{"name":"Hanh","username":"Hanh","email":"hanh425@gmail.com","commits":1,"url":"https://github.com/Hanh"}],"changelog":[{"hash":"dcc9594600c68f2deef3be552905cfbc2cecf5e5","time":1756048626000,"email":"hanh425@gmail.com","author":"Hanh","message":"cold wallet"}]},"filePathRelative":"guide/addresses.md"}');export{c as comp,p as data};
