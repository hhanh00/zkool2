import{_ as a,c as t,a as o,o as s}from"./app-D-X-frDV.js";const i="/zkool2/assets/17.database-BAIDRoJ7.png",n="/zkool2/assets/18.manager-ugZij2fA.png",r="/zkool2/assets/20.export-CWDQORIX.png",l="/zkool2/assets/21.load-CHN0u9lx.png",c={};function p(h,e){return s(),t("div",null,e[0]||(e[0]=[o('<h2 id="database-file" tabindex="-1"><a class="header-anchor" href="#database-file"><span>Database File</span></a></h2><p>Zkool keeps all the account data and some of the settings in wallet files, which are Sqlite/SqlCipher database files.</p><p>They are regular files that can be copied, moved and renamed outside of the Zkool <em>when they are not in use</em>.</p><p>Zkool has a database manager to perform these tasks because the directory where the app stores its data is out of reach of regular file managers unless the device is rooted.</p><p>Because the database manager acts on the database file, it needs to run <em>before</em> the wallet loads the data from it. This is why it cannot be accessed after the account list is read.</p><p>In the settings, tap on the &quot;folder&quot; icon.</p><figure><img src="'+i+'" alt="Open Database Manager" tabindex="0" loading="lazy"><figcaption>Open Database Manager</figcaption></figure><p>It schedules the opening of the database manager for the <em>next launch</em> of the app then restart<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>.</p><figure><img src="'+n+'" alt="Database Manager" tabindex="0" loading="lazy"><figcaption>Database Manager</figcaption></figure><ol><li>Create a new database</li><li>Import and <em>replace</em> the selected database. This <strong>erases</strong> the current contents</li><li>Save the database file (ie. make a copy). The copy is identical to the original file, ie. it has the same password (if any)</li><li>Edit the name of the database file</li><li>Set/Unset a password</li><li>Delete</li><li>Close and continue</li></ol><p>Some of the options are only available once you check the box next to the database name in the list.</p><blockquote><p>Tap on a database name to select it as the current database.</p></blockquote><h2 id="account-file" tabindex="-1"><a class="header-anchor" href="#account-file"><span>Account File</span></a></h2><p>Accounts can be individually exported in encrypted form with a user provided password.</p><figure><img src="'+r+'" alt="Export Account" tabindex="0" loading="lazy"><figcaption>Export Account</figcaption></figure><p>The account file can be then imported into another database by creating a new account and choosing the load file button.</p><figure><img src="'+l+'" alt="Import Account" tabindex="0" loading="lazy"><figcaption>Import Account</figcaption></figure><div class="hint-container important"><p class="hint-container-title">Important</p><p>The password set during the creation of the account file must be input. There is no way to recover the password if it is forgotten.</p></div><p>The database is a SQLCipher file. It can be browsed using a tool such as <a href="https://sqlitebrowser.org/" target="_blank" rel="noopener noreferrer">DB Browser for SQLite</a></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>If you have a database password set, you can also open the database manager from the dialog box that asks for the password. <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li></ol></section>',21)]))}const f=a(c,[["render",p]]),u=JSON.parse('{"path":"/recipe/database.html","title":"Database/Wallet Files","lang":"en-US","frontmatter":{"title":"Database/Wallet Files"},"git":{"updatedTime":1760450418000,"contributors":[{"name":"Hanh Huynh Huu","username":"","email":"hanh425@gmail.com","commits":1}],"changelog":[{"hash":"aac63ce366c824b0643349b3064793800960b5ac","time":1760450418000,"email":"hanh425@gmail.com","author":"Hanh Huynh Huu","message":"ledger"}]},"filePathRelative":"recipe/database.md"}');export{f as comp,u as data};
